#include <gtest/gtest.h>
#include <bits/stdc++.h>

using std::string;
using std::swap;
using std::cout;
using std::endl;
using std::begin;
using std::end;
using std::vector;

#include "min_substitution_in_ab_string_solution1.cpp"
#include "min_substitution_in_ab_string_solution2.cpp"

TEST(min_substitution_in_ab_string, testmultiple)
{
	std::vector<std::pair<std::string, int>> inputs {
        {"a", 1},
        {"b", 1},
        {"?", 1},
        {"ababab??ababab", 1},
        {"ababab???ababab", 2},
        {"ababab?????ababab", 2}, //ababab abbab ...
        {"ababab???????ababab", 2}, //ababab abbabab
        {"abaaabab???????ababab", 3}, 
        {"ababab?ababab", 2},
        {"abababb?ababab", 2},
        {"abababb?aababab", 3},
        {"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", 42},
        {"???????????????????????????????????????????????????????????????????aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", 42},
        {"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa???????????????????????????????????????????????????????????????????", 42},
        {"???????????????????????????????????????????????????????????????????aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa???????????????????????????????????????????????????????????????????", 42},
        {"abababababab", 1},
        {"bbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", 42},
        {"bbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", 42},
        {"a?b?b?b?b?b",2}, //aababababa..
        {"a?b?a",2},
        {"a??b??a",1},
        {"abbbbaaaaa??bbbbb",5},
        {"abbbbaaaaa?bbbbb",6},
        {"abbbaaaaa??aaaa",5},
        {"a?aa?aa?aa?aa?aa?aa?aa?aa?aa?aa?aa?aa?aa?aa?aa?aa?aa?aa?aa?a",2},
        {"a??aa??aa??aa??aa??aa??aa??aa??aa??aa??aa??aa??aa??aa??aa??aa??aa??aa??aa??aa??a",2},
        {"a???aa???aa???aa???aa???aa???aa???aa???aa???aa???aa???aa???aa???aa???aa???aa???aa???aa???aa???aa???a",2}
    };
    for(const auto& [input, expected]: inputs ){
	    EXPECT_EQ(expected,min_substitution_in_ab_string(input)) << "failed for "<<input;
    }
}



TEST(min_substitution_in_ab_string, test5)
{
	constexpr auto input = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa";
    const int expected = 42;
	EXPECT_EQ(expected,min_substitution_in_ab_string(input));
}


TEST(min_substitution_in_ab_string, test1)
{
	constexpr auto input = "aa??bbb";
    const int expected = 3;
	EXPECT_EQ(expected,min_substitution_in_ab_string(input));
}


TEST(min_substitution_in_ab_string, test2)
{
	constexpr auto input = "a?b?aa?b?a";
    const int expected = 2;
	EXPECT_EQ(expected,min_substitution_in_ab_string(input));
}



TEST(min_substitution_in_ab_string, test3)
{
	constexpr auto input = "??b??";
    const int expected = 1;
	EXPECT_EQ(expected,min_substitution_in_ab_string(input));
}

TEST(min_substitution_in_ab_string, test4)
{
	constexpr auto input = "aa?b?aa";
    const int expected = 3;
	EXPECT_EQ(expected,min_substitution_in_ab_string(input));
}

int main(int argc, char **argv) {
    ::testing::InitGoogleTest(&argc, argv); 
    return RUN_ALL_TESTS();
}

